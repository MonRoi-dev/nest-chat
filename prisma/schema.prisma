// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  username      String      @db.VarChar(32)
  email         String      @unique @db.VarChar(32)
  password      String      
  image         String      @default("imageNotFound.jpg")
  rooms         UserRooms[]    
  messages      Message[]   
  socketId      String?     @db.VarChar(32)
  createdAt     DateTime    @default(now()) @db.Timestamptz(3)
  updatedAt     DateTime    @updatedAt  @db.Timestamptz(3)
}

model Room {
  id            Int         @id @default(autoincrement())
  users         UserRooms[]
  messages      Message[]
}

model UserRooms {
  users         User        @relation(fields: [userId], references: [id])
  userId        Int
  rooms         Room        @relation(fields: [roomId], references: [id])
  roomId        Int     

  @@id([userId, roomId])
}

model Message {
  id            Int         @id @default(autoincrement())
  content       String      
  isImage       Boolean     @default(false)
  userId        Int         
  user          User        @relation(fields: [userId], references: [id])
  roomId        Int         
  room          Room        @relation(fields: [roomId], references: [id])
  createdAt     DateTime    @default(now()) @db.Timestamptz(3)
  updatedAt     DateTime    @updatedAt  @db.Timestamptz(3)
}

